module.exports = {
  Region: {
    deforestationRates: ({ id }, args, { dataSources }) => dataSources.deforestationRateAPI.getDeforestationRatesByRegionId({ regionId: id }),
    urbanVsRural: (parent, args, { dataSources }) => parent.getUrban_vs_rural(),
    majorExports: (parent, args, { dataSources }) => parent.getMajorExports(),
    gdpComponents: (parent, args, { dataSources }) => parent.getGdp_components(),
    laws: (parent, args, context, info) => parent.getLaws(),
  },
  Nation: {
    region: (parent, args, context, info) => parent.getRegion(),
    jurisdictions: (parent, args, context, info) => parent.getJurisdictions(),
    contacts: (parent, args, context, info) => parent.getContacts(),
    contentNational: (parent, args, context, info) => parent.getContent_national(),
    deforestationTrend: ({ id }, args, { dataSources }) => dataSources.valueNationalAPI.getDeforestationTrend({ nationId: id }),
    gdp: ({ id }, args, { dataSources }) => dataSources.valueNationalAPI.getGDP({ nationId: id }),
    humanDevelopmentIndex: ({ id }, args, { dataSources }) => dataSources.valueNationalAPI.getHumanDevelopmentIndex({ nationId: id }),
    landArea: ({ id }, args, { dataSources }) => dataSources.valueNationalAPI.getLandArea({ nationId: id }),
    perCapitaIncome: ({ id }, args, { dataSources }) => dataSources.valueNationalAPI.getPerCapitaIncome({ nationId: id }),
    percentForested: ({ id }, args, { dataSources }) => dataSources.valueNationalAPI.getPercentForested({ nationId: id }),
    population: ({ id }, args, { dataSources }) => dataSources.valueNationalAPI.getPopulation({ nationId: id }),
  },
  Jurisdiction: {
    region: (parent, args, context, info) => parent.getRegion(),
    nation: (parent, args, context, info) => parent.getNation(),
    contacts: (parent, args, context, info) => parent.getContacts(),
    contentJurisdictional: (parent, args, context, info) => parent.getContent_jurisdictional(),
    valueJurisdictionals: (parent, args, context, info) => parent.getValue_jurisdictionals(),
    // valueJurisdictional: (parent, args, context, info) => parent.getValue_jurisdictional(),
    deforestationReferenceRate: ({ id }, args, { dataSources }) => dataSources.valueJurisdictionalAPI.getDeforestationReferenceRate({ jurisdictionId: id }),
    deforestationTrend: ({ id }, args, { dataSources }) => dataSources.valueJurisdictionalAPI.getDeforestationTrend({ jurisdictionId: id }),
    deforestationReductionGoal: ({ id }, args, { dataSources }) => dataSources.valueJurisdictionalAPI.getDeforestationReductionGoal({ jurisdictionId: id }),
    forestArea: ({ id }, args, { dataSources }) => dataSources.valueJurisdictionalAPI.getForestArea({ jurisdictionId: id }),
    forestCarbon: ({ id }, args, { dataSources }) => dataSources.valueJurisdictionalAPI.getForestCarbon({ jurisdictionId: id }),
    forestManagement: (parent, args, { dataSources }) => parent.getForest_management(),
    gdp: ({ id }, args, { dataSources }) => dataSources.valueJurisdictionalAPI.getGDP({ jurisdictionId: id }),
    humanDevelopmentIndex: ({ id }, args, { dataSources }) => dataSources.valueJurisdictionalAPI.getHumanDevelopmentIndex({ jurisdictionId: id }),
    landArea: ({ id }, args, { dataSources }) => dataSources.valueJurisdictionalAPI.getLandArea({ jurisdictionId: id }),
    originalForestArea: ({ id }, args, { dataSources }) => dataSources.valueJurisdictionalAPI.getOriginalForestArea({ jurisdictionId: id }),
    perCapitaIncome: ({ id }, args, { dataSources }) => dataSources.valueJurisdictionalAPI.getPerCapitaIncome({ jurisdictionId: id }),
    population: ({ id }, args, { dataSources }) => dataSources.valueJurisdictionalAPI.getPopulation({ jurisdictionId: id }),
    potentialAnnualCO2Avoided: ({ id }, args, { dataSources }) => dataSources.valueJurisdictionalAPI.getPotentialAnnualCO2Avoided({ jurisdictionId: id }),
    safeguard: (parent, args, context, info) => parent.getSafeguard(),
    zoningSpatialPlan: (parent, args, context, info) => parent.getZoning_spatial_plan(),
    lawPolicyStrategy: (parent, args, context, info) => parent.getLaw_policy_strategy(),
  },
  Contact: {
    nation: (parent, args, context, info) => parent.getNation(),
    jurisdiction: (parent, args, context, info) => parent.getJurisdiction(),
  },
  ContentNational: {
    contentNationalTranslate: ({ id }, { code }, { dataSources }) => dataSources.contentNationalTranslateAPI.getContentNationalTranslateByCode({ id: id, languageCode: code }),
    contentNationalTranslates: (parent, args, context, info) => parent.getContent_national_translates(),
  },
  ContentJurisdictional: {
    // contentJurisdictionalTranslates: (parent, args, context, info) => { console.log('PARENT IS: ', parent); return parent.getAllContentJurisdictionalTranslates() },
    contentJurisdictionalTranslate: ({ id }, { code }, { dataSources }) => dataSources.contentJurisdictionalTranslateAPI.getContentJurisdictionalTranslateByCode({ id: id, languageCode: code }),
    contentJurisdictionalTranslates: (parent, args, context, info) => parent.getContent_jurisdictional_translates(),
    // Danny's Recommendation
    // contentJurisdictionalTranslate: (parent, args, context, info) => parent.getContent_jurisdictional_translates({ where: { languageCode: args.code } }).then(results => results[0])}
  },
  DeforestationRate: {
    region: (parent, args, context, info) => parent.getRegion(),
  },
  UrbanVsRural: {
    region: (parent, args, context, info) => parent.getRegion(),
  },
  // ContentJurisdictionalTranslate: {
  //   contentJurisdictional: (parent, args, context, info) => parent.getContentJurisdictional(),
  // },
  ValueJurisdictional: {
    jurisdiction: (parent, args, context, info) => parent.getJurisdiction(),
  },
  ValueNational: {
    nation: (parent, args, context, info) => parent.getNation(),
  },
  Law: {
    region: (parent, args, context, info) => parent.getRegion(),
    citation: (parent, args, context, info) => parent.getCitation(),
    lawTranslate: ({ id }, { code }, { dataSources }) => dataSources.lawTranslateAPI.getLawTranslateByCode({ id: id, languageCode: code }),
    lawTags: (parent, { code }, { dataSources }) => parent.getLawTags(),
  },
  LawTag: {
    lawTagTranslate: ({ id }, { code }, { dataSources }) => dataSources.lawTagTranslateAPI.getLawTagTranslateByCode({ id: id, languageCode: code }),
  },
  MajorExport: {
    region: (parent, args, context, info) => parent.getRegion(),
    majorExportTranslate: ({ id }, { code }, { dataSources }) => dataSources.majorExportTranslateAPI.getMajorExportTranslateByCode({ id: id, languageCode: code }),
  },
  GdpComponent: {
    region: (parent, args, context, info) => parent.getRegion(),
    gdpCategory: (parent, args, context, info) => parent.getGdp_category(),
    // citation: (parent, args, context, info) => parent.getCitation(),
  },
  GdpCategory: {
    gdpCategoryTranslate: ({ id }, { code }, { dataSources }) => dataSources.gdpCategoryTranslateAPI.getGdpCategoryTranslateByCode({ id: id, languageCode: code }),
  },
  Safeguard: {
    jurisdiction: (parent, args, context, info) => parent.getJurisdiction(),
    safeguardTranslate: ({ id }, { code }, { dataSources }) => dataSources.safeguardTranslateAPI.getSafeguardTranslateByCode({ id: id, languageCode: code }),
    safeguardTranslates: (parent, args, context, info) => parent.getSafeguard_translates(),
  },
  ZoningSpatialPlan: {
    jurisdiction: (parent, args, context, info) => parent.getJurisdiction(),
    zoningSpatialPlanTranslate: ({ id }, { code }, { dataSources }) => dataSources.zoningSpatialPlanTranslateAPI.getZoningSpatialPlanTranslateByCode({ id: id, languageCode: code }),
    zoningSpatialPlanTranslates: (parent, args, context, info) => parent.getZoning_spatial_plan_translates(),
  },
  LawPolicyStrategy: {
    jurisdiction: (parent, args, context, info) => parent.getJurisdiction(),
    lawPolicyStrategyTranslate: ({ id }, { code }, { dataSources }) => dataSources.lawPolicyStrategyTranslateAPI.getLawPolicyStrategyTranslateByCode({ id: id, languageCode: code }),
    lawPolicyStrategyTranslates: (parent, args, context, info) => parent.getLaw_policy_strategy_translates(),
  },
  Query: {
    // launches: (_, __, { dataSources }) =>
    //   dataSources.launchAPI.getAllLaunches(),
    // launch: (_, { id }, { dataSources }) =>
    //   dataSources.launchAPI.getLaunchById({ launchId: id }),
    // me: (_, __, { dataSources }) => dataSources.userAPI.findOrCreateUser()
    region: (_, { id }, { dataSources }) => dataSources.regionAPI.getRegionById({ regionId: id }),
    regionByName: (_, { name }, { dataSources }) => dataSources.regionAPI.getRegionByName({ name: name }),
    nation: (_, { id }, { dataSources }) => dataSources.nationAPI.getNationById({ nationId: id }),
    nationByName: (_, { name }, { dataSources }) => dataSources.nationAPI.getNationByName({ name: name }),
    jurisdiction: (_, { id }, { dataSources }) => dataSources.jurisdictionAPI.getJurisdictionById({ jurisdictionId: id }),
    jurisdictionByName: (_, { name }, { dataSources }) => dataSources.jurisdictionAPI.getJurisdictionByName({ name: name }),
    languages: (_, __, { dataSources }) => dataSources.languageAPI.getAllLanguages(),
    language: (_, { code }, { dataSources }) => dataSources.languageAPI.getLanguageByCode({ languageCode: code }),
    citations: (_, __, { dataSources }) => dataSources.citationAPI.getAllCitations(),
    citation: (_, { id }, { dataSources }) => dataSources.citationAPI.getCitationByCode({ citationId: id }),
    contacts: (_, __, { dataSources }) => dataSources.contactAPI.getAllContacts(),
    contact: (_, { id }, { dataSources }) => dataSources.contactAPI.getContactById({ contactId: id }),
    // partnerships: (_, __, { dataSources }) => dataSources.partnershipAPI.getAllPartnerships(),
    // partnership: (_, { id }, { dataSources }) => dataSources.partnershipAPI.getPartnershipById({ partnershipId: id }),
    // partnershipTranslates: (_, __, { dataSources }) => dataSources.partnershipTranslateAPI.getAllPartnershipTranslates(),
    // partnershipTranslate: (_, { id }, { dataSources }) => dataSources.partnershipTranslateAPI.getPartnershipTranslateById({ partnershipTranslateId: id }),
    // institutionalFrameworks: (_, __, { dataSources }) => dataSources.institutionalFrameworkAPI.getAllInstitutionalFrameworks(),
    // institutionalFramework: (_, { id }, { dataSources }) => dataSources.institutionalFrameworkAPI.getInstitutionalFrameworkById({ institutionalFrameworkId: id }),
    // institutionalFrameworkTranslates: (_, __, { dataSources }) => dataSources.institutionalFrameworkTranslateAPI.getAllInstitutionalFrameworkTranslates(),
    // institutionalFrameworkTranslate: (_, { id }, { dataSources }) => dataSources.institutionalFrameworkTranslateAPI.getInstitutionalFrameworkTranslateById({ institutionalFrameworkTranslateId: id }),
    laws: (_, __, { dataSources }) => dataSources.lawAPI.getAllLaws(),
    law: (_, { id }, { dataSources }) => dataSources.lawAPI.getLawById({ lawId: id }),
    lawTranslates: (_, __, { dataSources }) => dataSources.lawTranslateAPI.getAllLawTranslates(),
    lawTranslate: (_, { id }, { dataSources }) => dataSources.lawTranslateAPI.getLawTranslateById({ lawTranslateId: id }),
    safeguards: (_, __, { dataSources }) => dataSources.safeguardAPI.getAllSafeguards(),
    safeguard: (_, { id }, { dataSources }) => dataSources.safeguardAPI.getSafeguardById({ safeguardId: id }),
    safeguardTranslates: (_, __, { dataSources }) => dataSources.safeguardTranslateAPI.getAllSafeguardTranslates(),
    safeguardTranslate: (_, { id }, { dataSources }) => dataSources.safeguardTranslateAPI.getSafeguardTranslateById({ safeguardTranslateId: id }),
    zoningSpatialPlans: (_, __, { dataSources }) => dataSources.zoningSpatialPlanAPI.getAllZoningSpatialPlans(),
    zoningSpatialPlan: (_, { id }, { dataSources }) => dataSources.zoningSpatialPlanAPI.getZoningSpatialPlanById({ zoningSpatialPlanId: id }),
    zoningSpatialPlanTranslates: (_, __, { dataSources }) => dataSources.zoningSpatialPlanTranslateAPI.getAllZoningSpatialPlanTranslates(),
    zoningSpatialPlanTranslate: (_, { id }, { dataSources }) => dataSources.zoningSpatialPlanTranslateAPI.getZoningSpatialPlanTranslateById({ zoningSpatialPlanTranslateId: id }),
    lawPolicyStrategys: (_, __, { dataSources }) => dataSources.lawPolicyStrategyAPI.getAllLawPolicyStrategys(),
    lawPolicyStrategy: (_, { id }, { dataSources }) => dataSources.lawPolicyStrategyAPI.getLawPolicyStrategyById({ lawPolicyStrategyId: id }),
    lawPolicyStrategyTranslates: (_, __, { dataSources }) => dataSources.lawPolicyStrategyTranslateAPI.getAllLawPolicyStrategys(),
    zoningSpatialPlanTranslate: (_, { id }, { dataSources }) => dataSources.lawPolicyStrategyTranslateAPI.getLawPolicyStrategyById({ lawPolicyStrategyTranslateId: id }),
    // vegetations: (_, __, { dataSources }) => dataSources.vegetationAPI.getAllVegetations(),
    // vegetation: (_, { id }, { dataSources }) => dataSources.vegetationAPI.getVegetationById({ vegetationId: id }),
    forestManagements: (_, __, { dataSources }) => dataSources.forestManagementAPI.getAllForestManagements(),
    forestManagement: (_, { id }, { dataSources }) => dataSources.forestManagementAPI.getForestManagementById({ forestManagementId: id }),
    deforestationRates: (_, __, { dataSources }) => dataSources.deforestationRateAPI.getAllDeforestationRates(),
    deforestationRate: (_, { id }, { dataSources }) => dataSources.deforestationRateAPI.getDeforestationRateById({ deforestationRateId: id }),
    // socialGroups: (_, __, { dataSources }) => dataSources.socialGroupAPI.getAllSocialGroups(),
    // socialGroup: (_, { id }, { dataSources }) => dataSources.socialGroupAPI.getSocialGroupById({ socialGroupId: id }),
    urbanVsRurals: (_, __, { dataSources }) => dataSources.urbanVsRuralAPI.getAllUrbanVsRurals(),
    urbanVsRural: (_, { id }, { dataSources }) => dataSources.urbanVsRuralAPI.getUrbanVsRuralById({ urbanVsRuralId: id }),
    gdpCategorys: (_, __, { dataSources }) => dataSources.gdpCategoryAPI.getAllGdpCategorys(),
    gdpCategory: (_, { id }, { dataSources }) => dataSources.gdpCategoryAPI.getGdpCategoryById({ gdpCategoryId: id }),
    valueNationals: (_, __, { dataSources }) => dataSources.valueNationalAPI.getAllValueNationals(),
    valueNational: (_, { id }, { dataSources }) => dataSources.valueNationalAPI.getValueNationalById({ valueNationalId: id }),
    valueJurisdictionals: (_, __, { dataSources }) => dataSources.valueJurisdictionalAPI.getAllValueJurisdictionals(),
    valueJurisdictional: (_, { id }, { dataSources }) => dataSources.valueJurisdictionalAPI.getValueJurisdictionalById({ valueJurisdictionalId: id }),
    valueGlobals: (_, __, { dataSources }) => dataSources.valueGlobalAPI.getAllValueGlobals(),
    valueGlobal: (_, { id }, { dataSources }) => dataSources.valueGlobalAPI.getValueGlobalById({ valueGlobalId: id }),
    majorExports: (_, __, { dataSources }) => dataSources.majorExportAPI.getAllMajorExports(),
    majorExport: (_, { id }, { dataSources }) => dataSources.majorExportAPI.getMajorExportById({ majorExportId: id }),
    // commoditys: (_, __, { dataSources }) => dataSources.commodityAPI.getAllCommoditys(),
    // commodity: (_, { id }, { dataSources }) => dataSources.commodityAPI.getCommodityById({ commodityId: id }),
    // slrtScores: (_, __, { dataSources }) => dataSources.slrtScoreAPI.getAllSlrtScores(),
    // slrtScore: (_, { id }, { dataSources }) => dataSources.slrtScoreAPI.getSlrtScoreById({ slrtScoreId: id }),
    // organizations: (_, __, { dataSources }) => dataSources.organizationAPI.getAllOrganizations(),
    // organization: (_, { id }, { dataSources }) => dataSources.organizationAPI.getOrganizationById({ organizationId: id }),
    // organizationTranslates: (_, __, { dataSources }) => dataSources.organizationTranslateAPI.getAllOrganizationTranslates(),
    // organizationTranslate: (_, { id }, { dataSources }) => dataSources.organizationTranslateAPI.getOrganizationTranslateById({ organizationTranslateId: id }),
    contentNationals: (_, __, { dataSources }) => dataSources.contentNationalAPI.getAllContentNationals(),
    contentNational: (_, { id }, { dataSources }) => dataSources.contentNationalAPI.getContentNationalById({ contentNationalId: id }),
    contentNationalTranslates: (_, __, { dataSources }) => dataSources.contentNationalTranslateAPI.getAllContentNationalTranslates(),
    contentNationalTranslate: (_, { id }, { dataSources }) => dataSources.contentNationalTranslateAPI.getContentNationalTranslateById({ contentNationalTranslateId: id }),
    contentJurisdictionals: (_, __, { dataSources }) => dataSources.contentJurisdictionalAPI.getAllContentJurisdictionals(),
    contentJurisdictional: (_, { id }, { dataSources }) => dataSources.contentJurisdictionalAPI.getContentJurisdictionalById({ contentJurisdictionalId: id }),
    contentJurisdictionalTranslates: (_, __, { dataSources }) => dataSources.contentJurisdictionalTranslateAPI.getAllContentJurisdictionalTranslates(),
    contentJurisdictionalTranslate: (_, { code }, { dataSources }) => dataSources.contentJurisdictionalTranslateAPI.getContentJurisdictionalTranslateByCode({ languageCode: code }),
    // vegetationTranslates: (_, __, { dataSources }) => dataSources.vegetationTranslateAPI.getAllVegetationTranslates(),
    // vegetationTranslate: (_, { id }, { dataSources }) => dataSources.vegetationTranslateAPI.getVegetationTranslateById({ vegetationTranslateId: id }),
    // socialGroupTranslates: (_, __, { dataSources }) => dataSources.socialGroupTranslateAPI.getAllSocialGroupTranslates(),
    // socialGroupTranslate: (_, { id }, { dataSources }) => dataSources.socialGroupTranslateAPI.getSocialGroupTranslateById({ socialGroupTranslateId: id }),
    gdpCategoryTranslates: (_, __, { dataSources }) => dataSources.gdpCategoryTranslateAPI.getAllGdpCategoryTranslates(),
    gdpCategoryTranslate: (_, { id }, { dataSources }) => dataSources.gdpCategoryTranslateAPI.getGdpCategoryTranslateById({ gdpCategoryTranslateId: id }),
    // commodityTranslates: (_, __, { dataSources }) => dataSources.commodityTranslateAPI.getAllCommodityTranslates(),
    // commodityTranslate: (_, { id }, { dataSources }) => dataSources.commodityTranslateAPI.getCommodityTranslateById({ commodityTranslateId: id }),
    majorExportTranslates: (_, __, { dataSources }) => dataSources.majorExportTranslateAPI.getAllMajorExportTranslates(),
    majorExportTranslate: (_, { id }, { dataSources }) => dataSources.majorExportTranslateAPI.getMajorExportTranslateById({ majorExportTranslateId: id }),
    lawTags: (_, __, { dataSources }) => dataSources.lawTagAPI.getAllLawTags(),
    lawTag: (_, { id }, { dataSources }) => dataSources.lawTagAPI.getLawTagById({ lawTagId: id }),
    lawTagTranslates: (_, __, { dataSources }) => dataSources.lawTagTranslateAPI.getAllLawTagTranslates(),
    lawTagTranslate: (_, { id }, { dataSources }) => dataSources.lawTagTranslateAPI.getLawTagTranslateById({ lawTagTranslateId: id }),
  }
};
